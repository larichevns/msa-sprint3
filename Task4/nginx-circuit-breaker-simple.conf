http {
    upstream logistics_backend {
        # Конфигурация Circuit Breaker:
        # max_fails=5 - после 5 неудачных попыток сервер считается недоступным
        # fail_timeout=30s - сервер исключается из ротации на 30 секунд
        server logistics.company.com max_fails=5 fail_timeout=30s;
    }

    server {
        listen 8080;

        location /logistics/ {
            # Таймаут ответа - 3 секунды
            proxy_connect_timeout 3s;
            proxy_read_timeout 3s;
            proxy_send_timeout 3s;
            
            # При ошибке пытаемся обратиться к следующему серверу в upstream
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_next_upstream_tries 1;
            
            proxy_pass http://logistics_backend;
            
            # Перехват ошибок для возврата fallback-ответа
            proxy_intercept_errors on;
            error_page 502 503 504 = @circuit_breaker_fallback;
        }
        
        # Fallback-ответ при срабатывании Circuit Breaker
        location @circuit_breaker_fallback {
            default_type application/json;
            return 503 '{"status":"error","message":"Service temporarily unavailable","fallback":true}';
        }
    }
}