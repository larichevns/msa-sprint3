http {
    # Определяем разные зоны для веб и мобильного приложения
    # Веб-приложение: 50 req/s на IP
    limit_req_zone $binary_remote_addr zone=web_zone:10m rate=50r/s;
    
    # Мобильное приложение: 30 req/s на IP
    limit_req_zone $binary_remote_addr zone=mobile_zone:10m rate=30r/s;

    # Map для определения типа клиента на основе User-Agent
    map $http_user_agent $client_type {
        default                     "web";
        ~*(android|ios|mobile)      "mobile";
    }

    # Upstream backend
    upstream backend {
        server backend1.local:8080;
        server backend2.local:8080;
        server backend3.local:8080;
    }

    server {
        listen 80;

        # API для веб-приложения
        location /api/ {
            # Выбираем зону rate limiter в зависимости от типа клиента
            if ($client_type = "mobile") {
                # Применяем лимит для мобильного приложения
                # burst=60 позволяет обработать кратковременные всплески (2x от rate)
                limit_req zone=mobile_zone burst=60 nodelay;
            }
            
            if ($client_type = "web") {
                # Применяем лимит для веб-приложения
                # burst=100 позволяет обработать кратковременные всплески (2x от rate)
                limit_req zone=web_zone burst=100 nodelay;
            }

            # Добавляем заголовки с информацией о лимитах
            add_header X-RateLimit-Limit $limit_req_status always;
            add_header X-Client-Type $client_type always;

            # Проксируем на backend
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Client-Type $client_type;
        }

        # Альтернативный вариант с использованием разных location для разных типов клиентов
        # Этот подход более эффективен, так как не использует if в location
        
        # Специальный endpoint для мобильных клиентов
        location /mobile/api/ {
            limit_req zone=mobile_zone burst=60 nodelay;
            
            # Переписываем путь, убирая /mobile
            rewrite ^/mobile(/.*)$ $1 break;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Client-Type "mobile";
        }

        # Специальный endpoint для веб-клиентов  
        location /web/api/ {
            limit_req zone=web_zone burst=100 nodelay;
            
            # Переписываем путь, убирая /web
            rewrite ^/web(/.*)$ $1 break;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Client-Type "web";
        }

        # Обработка ошибок rate limiting
        error_page 503 = @rate_limit_error;
        location @rate_limit_error {
            add_header Content-Type application/json always;
            return 503 '{"error": "Rate limit exceeded", "message": "Too many requests, please try again later"}';
        }
    }
}